# Generated by Django 5.2.4 on 2025-07-17 20:55

import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('db', '0002_footballcompetition_type_competition_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='FbCompetition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition_name', models.CharField(max_length=50)),
                ('type_competition', models.CharField(blank=True, choices=[('T', 'TOURNIRE'), ('L', 'LEAGUE')], max_length=1)),
            ],
            options={
                'verbose_name': 'Competition',
                'verbose_name_plural': 'Competions',
                'ordering': ['competition_name'],
            },
        ),
        migrations.CreateModel(
            name='FbFederation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_fed', models.CharField(max_length=100, unique=True)),
                ('acronym_fed', models.CharField(max_length=10, unique=True)),
                ('type_fed', models.CharField(choices=[('GL', 'GLOBAL'), ('CN', 'CONTINENTAL')], max_length=2)),
                ('founded_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1850), django.core.validators.MaxValueValidator(2100)])),
                ('members_count', models.PositiveIntegerField(help_text='Dont counting associate members')),
                ('associate_member_count', models.PositiveIntegerField(blank=True, default=0, help_text='Members who not full join to federation. Default value 0')),
                ('main_tournament', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='governing_federation', to='db.fbcompetition')),
                ('other_tournament', models.ManyToManyField(related_name='secondary_federation', to='db.fbcompetition')),
            ],
            options={
                'verbose_name': 'Football Federation',
                'verbose_name_plural': 'Football Federations',
                'ordering': ['acronym_fed'],
            },
        ),
        migrations.CreateModel(
            name='FbLeague',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_league', models.CharField(max_length=50)),
                ('count_team_in_league', models.IntegerField(default=0)),
                ('league_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.fbcompetition')),
            ],
        ),
        migrations.CreateModel(
            name='FbSeason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_season_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1850), django.core.validators.MaxValueValidator(2100)])),
                ('end_season_year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1850), django.core.validators.MaxValueValidator(2100)])),
                ('name_league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='season', to='db.fbleague')),
            ],
        ),
        migrations.CreateModel(
            name='FbStandings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_played_count', models.PositiveIntegerField()),
                ('win_match_count', models.PositiveIntegerField()),
                ('losse_match_count', models.PositiveIntegerField()),
                ('draw_match_count', models.PositiveIntegerField()),
                ('difference_goal', models.IntegerField()),
                ('scored_goal', models.PositiveIntegerField()),
                ('missed_goal', models.PositiveIntegerField()),
                ('last_five_match', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=1), default=list, size=5)),
                ('season_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.fbseason')),
                ('standing_league', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.fbleague')),
            ],
        ),
        migrations.CreateModel(
            name='FbTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.RemoveField(
            model_name='footballleague',
            name='League_Name',
        ),
        migrations.RemoveField(
            model_name='countryfootball',
            name='Tournament_In_Country',
        ),
        migrations.DeleteModel(
            name='FootballFederationM',
        ),
        migrations.RemoveField(
            model_name='standings',
            name='Standing_League',
        ),
        migrations.RemoveField(
            model_name='footballseason',
            name='Season_League',
        ),
        migrations.RemoveField(
            model_name='standings',
            name='Season_Year',
        ),
        migrations.DeleteModel(
            name='FootballTeam',
        ),
        migrations.RemoveField(
            model_name='countryfootball',
            name='Country_Name',
        ),
        migrations.AddField(
            model_name='countryfootball',
            name='country_fed_tournament',
            field=models.ManyToManyField(related_name='countries', to='db.fbcompetition'),
        ),
        migrations.AddField(
            model_name='fbstandings',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.fbteam'),
        ),
        migrations.DeleteModel(
            name='FootballCompetition',
        ),
        migrations.DeleteModel(
            name='FootballLeague',
        ),
        migrations.DeleteModel(
            name='FootballSeason',
        ),
        migrations.DeleteModel(
            name='Standings',
        ),
        migrations.AddField(
            model_name='countryfootball',
            name='country_name',
            field=models.CharField(default='null', max_length=50),
            preserve_default=False,
        ),
    ]
